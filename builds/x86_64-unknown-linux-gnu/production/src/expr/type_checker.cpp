/*********************                                                        */
/** type_checker.cpp
 **
 ** Copyright 2010-2014  New York University and The University of Iowa,
 ** and as below.
 **
 ** This file automatically generated by:
 **
 **     /home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/expr/mkexpr /home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/expr/type_checker_template.cpp /home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/builtin/kinds /home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/booleans/kinds /home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/uf/kinds /home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds /home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds /home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arrays/kinds /home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/datatypes/kinds /home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/sets/kinds /home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds /home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/quantifiers/kinds /home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/idl/kinds
 **
 ** for the CVC4 project.
 **/

/* THIS FILE IS AUTOMATICALLY GENERATED, DO NOT EDIT ! */
/* THIS FILE IS AUTOMATICALLY GENERATED, DO NOT EDIT ! */
/* THIS FILE IS AUTOMATICALLY GENERATED, DO NOT EDIT ! */
/* THIS FILE IS AUTOMATICALLY GENERATED, DO NOT EDIT ! */
/* THIS FILE IS AUTOMATICALLY GENERATED, DO NOT EDIT ! */
/* THIS FILE IS AUTOMATICALLY GENERATED, DO NOT EDIT ! */

/* THIS FILE IS AUTOMATICALLY GENERATED, DO NOT EDIT ! */
/* THIS FILE IS AUTOMATICALLY GENERATED, DO NOT EDIT ! */
/* THIS FILE IS AUTOMATICALLY GENERATED, DO NOT EDIT ! */
/* THIS FILE IS AUTOMATICALLY GENERATED, DO NOT EDIT ! */
/* THIS FILE IS AUTOMATICALLY GENERATED, DO NOT EDIT ! */
/* THIS FILE IS AUTOMATICALLY GENERATED, DO NOT EDIT ! */

/* Edit the template file instead:                     */
/* /home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/expr/type_checker_template.cpp */

/*********************                                                        */
/*! \file type_checker_template.cpp
 ** \verbatim
 ** Original author: Morgan Deters
 ** Major contributors: Tim King
 ** Minor contributors (to current version): none
 ** This file is part of the CVC4 project.
 ** Copyright (c) 2009-2014  New York University and The University of Iowa
 ** See the file COPYING in the top-level source directory for licensing
 ** information.\endverbatim
 **
 ** \brief TypeChecker implementation
 **
 ** TypeChecker implementation.
 **/

#line 18 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/expr/type_checker_template.cpp"

#include "expr/type_checker.h"
#include "expr/node_manager.h"
#include "expr/node_manager_attributes.h"


#include "theory/builtin/theory_builtin_type_rules.h"
#include "theory/booleans/theory_bool_type_rules.h"
#include "theory/uf/theory_uf_type_rules.h"
#include "theory/arith/theory_arith_type_rules.h"
#include "theory/bv/theory_bv_type_rules.h"
#include "theory/arrays/theory_arrays_type_rules.h"
#include "theory/datatypes/theory_datatypes_type_rules.h"
#include "theory/sets/theory_sets_type_rules.h"
#include "theory/strings/theory_strings_type_rules.h"
#include "theory/quantifiers/theory_quantifiers_type_rules.h"

#line 26 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/expr/type_checker_template.cpp"

namespace CVC4 {
namespace expr {

TypeNode TypeChecker::computeType(NodeManager* nodeManager, TNode n, bool check)
  throw (TypeCheckingExceptionPrivate, AssertionException) {
  TypeNode typeNode;

  // Infer the type
  switch(n.getKind()) {
  case kind::VARIABLE:
  case kind::SKOLEM:
    typeNode = nodeManager->getAttribute(n, TypeAttr());
    break;
  case kind::BUILTIN:
    typeNode = nodeManager->builtinOperatorType();
    break;


#line 271 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/builtin/kinds"
  case kind::UNINTERPRETED_CONSTANT:
#line 271 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/builtin/kinds"
    typeNode = ::CVC4::theory::builtin::UninterpretedConstantTypeRule::computeType(nodeManager, n, check);
    break;

#line 281 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/builtin/kinds"
  case kind::ABSTRACT_VALUE:
#line 281 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/builtin/kinds"
    typeNode = ::CVC4::theory::builtin::AbstractValueTypeRule::computeType(nodeManager, n, check);
    break;

#line 334 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/builtin/kinds"
  case kind::APPLY:
#line 334 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/builtin/kinds"
    typeNode = ::CVC4::theory::builtin::ApplyTypeRule::computeType(nodeManager, n, check);
    break;

#line 335 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/builtin/kinds"
  case kind::EQUAL:
#line 335 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/builtin/kinds"
    typeNode = ::CVC4::theory::builtin::EqualityTypeRule::computeType(nodeManager, n, check);
    break;

#line 336 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/builtin/kinds"
  case kind::DISTINCT:
#line 336 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/builtin/kinds"
    typeNode = ::CVC4::theory::builtin::DistinctTypeRule::computeType(nodeManager, n, check);
    break;

#line 337 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/builtin/kinds"
  case kind::SEXPR:
#line 337 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/builtin/kinds"
    typeNode = ::CVC4::theory::builtin::SExprTypeRule::computeType(nodeManager, n, check);
    break;

#line 338 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/builtin/kinds"
  case kind::LAMBDA:
#line 338 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/builtin/kinds"
    typeNode = ::CVC4::theory::builtin::LambdaTypeRule::computeType(nodeManager, n, check);
    break;

#line 340 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/builtin/kinds"
  case kind::CHAIN:
#line 340 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/builtin/kinds"
    typeNode = ::CVC4::theory::builtin::ChainTypeRule::computeType(nodeManager, n, check);
    break;

#line 341 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/builtin/kinds"
  case kind::CHAIN_OP:
#line 341 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/builtin/kinds"
    typeNode = ::CVC4::theory::builtin::ChainedOperatorTypeRule::computeType(nodeManager, n, check);
    break;

#line 39 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/booleans/kinds"
  case kind::CONST_BOOLEAN:
#line 39 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/booleans/kinds"
    typeNode = ::CVC4::theory::boolean::BooleanTypeRule::computeType(nodeManager, n, check);
    break;

#line 41 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/booleans/kinds"
  case kind::NOT:
#line 41 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/booleans/kinds"
    typeNode = ::CVC4::theory::boolean::BooleanTypeRule::computeType(nodeManager, n, check);
    break;

#line 42 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/booleans/kinds"
  case kind::AND:
#line 42 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/booleans/kinds"
    typeNode = ::CVC4::theory::boolean::BooleanTypeRule::computeType(nodeManager, n, check);
    break;

#line 43 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/booleans/kinds"
  case kind::IFF:
#line 43 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/booleans/kinds"
    typeNode = ::CVC4::theory::boolean::BooleanTypeRule::computeType(nodeManager, n, check);
    break;

#line 44 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/booleans/kinds"
  case kind::IMPLIES:
#line 44 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/booleans/kinds"
    typeNode = ::CVC4::theory::boolean::BooleanTypeRule::computeType(nodeManager, n, check);
    break;

#line 45 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/booleans/kinds"
  case kind::OR:
#line 45 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/booleans/kinds"
    typeNode = ::CVC4::theory::boolean::BooleanTypeRule::computeType(nodeManager, n, check);
    break;

#line 46 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/booleans/kinds"
  case kind::XOR:
#line 46 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/booleans/kinds"
    typeNode = ::CVC4::theory::boolean::BooleanTypeRule::computeType(nodeManager, n, check);
    break;

#line 47 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/booleans/kinds"
  case kind::ITE:
#line 47 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/booleans/kinds"
    typeNode = ::CVC4::theory::boolean::IteTypeRule::computeType(nodeManager, n, check);
    break;

#line 16 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/uf/kinds"
  case kind::APPLY_UF:
#line 16 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/uf/kinds"
    typeNode = ::CVC4::theory::uf::UfTypeRule::computeType(nodeManager, n, check);
    break;

#line 19 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/uf/kinds"
  case kind::CARDINALITY_CONSTRAINT:
#line 19 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/uf/kinds"
    typeNode = ::CVC4::theory::uf::CardinalityConstraintTypeRule::computeType(nodeManager, n, check);
    break;

#line 22 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/uf/kinds"
  case kind::COMBINED_CARDINALITY_CONSTRAINT:
#line 22 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/uf/kinds"
    typeNode = ::CVC4::theory::uf::CombinedCardinalityConstraintTypeRule::computeType(nodeManager, n, check);
    break;

#line 86 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds"
  case kind::PLUS:
#line 86 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds"
    typeNode = ::CVC4::theory::arith::ArithOperatorTypeRule::computeType(nodeManager, n, check);
    break;

#line 87 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds"
  case kind::MULT:
#line 87 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds"
    typeNode = ::CVC4::theory::arith::ArithOperatorTypeRule::computeType(nodeManager, n, check);
    break;

#line 88 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds"
  case kind::MINUS:
#line 88 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds"
    typeNode = ::CVC4::theory::arith::ArithOperatorTypeRule::computeType(nodeManager, n, check);
    break;

#line 89 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds"
  case kind::UMINUS:
#line 89 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds"
    typeNode = ::CVC4::theory::arith::ArithOperatorTypeRule::computeType(nodeManager, n, check);
    break;

#line 90 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds"
  case kind::DIVISION:
#line 90 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds"
    typeNode = ::CVC4::theory::arith::ArithOperatorTypeRule::computeType(nodeManager, n, check);
    break;

#line 91 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds"
  case kind::POW:
#line 91 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds"
    typeNode = ::CVC4::theory::arith::ArithOperatorTypeRule::computeType(nodeManager, n, check);
    break;

#line 93 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds"
  case kind::CONST_RATIONAL:
#line 93 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds"
    typeNode = ::CVC4::theory::arith::ArithConstantTypeRule::computeType(nodeManager, n, check);
    break;

#line 95 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds"
  case kind::LT:
#line 95 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds"
    typeNode = ::CVC4::theory::arith::ArithPredicateTypeRule::computeType(nodeManager, n, check);
    break;

#line 96 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds"
  case kind::LEQ:
#line 96 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds"
    typeNode = ::CVC4::theory::arith::ArithPredicateTypeRule::computeType(nodeManager, n, check);
    break;

#line 97 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds"
  case kind::GT:
#line 97 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds"
    typeNode = ::CVC4::theory::arith::ArithPredicateTypeRule::computeType(nodeManager, n, check);
    break;

#line 98 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds"
  case kind::GEQ:
#line 98 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds"
    typeNode = ::CVC4::theory::arith::ArithPredicateTypeRule::computeType(nodeManager, n, check);
    break;

#line 100 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds"
  case kind::TO_REAL:
#line 100 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds"
    typeNode = ::CVC4::theory::arith::ArithOperatorTypeRule::computeType(nodeManager, n, check);
    break;

#line 101 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds"
  case kind::TO_INTEGER:
#line 101 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds"
    typeNode = ::CVC4::theory::arith::ArithOperatorTypeRule::computeType(nodeManager, n, check);
    break;

#line 102 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds"
  case kind::IS_INTEGER:
#line 102 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds"
    typeNode = ::CVC4::theory::arith::ArithUnaryPredicateTypeRule::computeType(nodeManager, n, check);
    break;

#line 104 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds"
  case kind::ABS:
#line 104 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds"
    typeNode = ::CVC4::theory::arith::IntOperatorTypeRule::computeType(nodeManager, n, check);
    break;

#line 105 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds"
  case kind::INTS_DIVISION:
#line 105 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds"
    typeNode = ::CVC4::theory::arith::IntOperatorTypeRule::computeType(nodeManager, n, check);
    break;

#line 106 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds"
  case kind::INTS_MODULUS:
#line 106 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds"
    typeNode = ::CVC4::theory::arith::IntOperatorTypeRule::computeType(nodeManager, n, check);
    break;

#line 107 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds"
  case kind::DIVISIBLE:
#line 107 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds"
    typeNode = ::CVC4::theory::arith::IntUnaryPredicateTypeRule::computeType(nodeManager, n, check);
    break;

#line 109 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds"
  case kind::DIVISION_TOTAL:
#line 109 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds"
    typeNode = ::CVC4::theory::arith::ArithOperatorTypeRule::computeType(nodeManager, n, check);
    break;

#line 110 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds"
  case kind::INTS_DIVISION_TOTAL:
#line 110 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds"
    typeNode = ::CVC4::theory::arith::IntOperatorTypeRule::computeType(nodeManager, n, check);
    break;

#line 111 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds"
  case kind::INTS_MODULUS_TOTAL:
#line 111 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arith/kinds"
    typeNode = ::CVC4::theory::arith::IntOperatorTypeRule::computeType(nodeManager, n, check);
    break;

#line 135 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::CONST_BITVECTOR:
#line 135 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorConstantTypeRule::computeType(nodeManager, n, check);
    break;

#line 137 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_AND:
#line 137 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorFixedWidthTypeRule::computeType(nodeManager, n, check);
    break;

#line 138 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_OR:
#line 138 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorFixedWidthTypeRule::computeType(nodeManager, n, check);
    break;

#line 139 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_XOR:
#line 139 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorFixedWidthTypeRule::computeType(nodeManager, n, check);
    break;

#line 140 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_NOT:
#line 140 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorFixedWidthTypeRule::computeType(nodeManager, n, check);
    break;

#line 141 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_NAND:
#line 141 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorFixedWidthTypeRule::computeType(nodeManager, n, check);
    break;

#line 142 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_NOR:
#line 142 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorFixedWidthTypeRule::computeType(nodeManager, n, check);
    break;

#line 143 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_XNOR:
#line 143 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorFixedWidthTypeRule::computeType(nodeManager, n, check);
    break;

#line 145 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_COMP:
#line 145 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorCompTypeRule::computeType(nodeManager, n, check);
    break;

#line 147 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_MULT:
#line 147 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorFixedWidthTypeRule::computeType(nodeManager, n, check);
    break;

#line 148 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_PLUS:
#line 148 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorFixedWidthTypeRule::computeType(nodeManager, n, check);
    break;

#line 149 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_SUB:
#line 149 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorFixedWidthTypeRule::computeType(nodeManager, n, check);
    break;

#line 150 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_NEG:
#line 150 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorFixedWidthTypeRule::computeType(nodeManager, n, check);
    break;

#line 152 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_UDIV:
#line 152 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorFixedWidthTypeRule::computeType(nodeManager, n, check);
    break;

#line 153 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_UREM:
#line 153 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorFixedWidthTypeRule::computeType(nodeManager, n, check);
    break;

#line 154 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_UDIV_TOTAL:
#line 154 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorFixedWidthTypeRule::computeType(nodeManager, n, check);
    break;

#line 155 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_UREM_TOTAL:
#line 155 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorFixedWidthTypeRule::computeType(nodeManager, n, check);
    break;

#line 156 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_SDIV:
#line 156 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorFixedWidthTypeRule::computeType(nodeManager, n, check);
    break;

#line 157 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_SREM:
#line 157 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorFixedWidthTypeRule::computeType(nodeManager, n, check);
    break;

#line 158 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_SMOD:
#line 158 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorFixedWidthTypeRule::computeType(nodeManager, n, check);
    break;

#line 159 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_SHL:
#line 159 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorFixedWidthTypeRule::computeType(nodeManager, n, check);
    break;

#line 160 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_LSHR:
#line 160 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorFixedWidthTypeRule::computeType(nodeManager, n, check);
    break;

#line 161 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_ASHR:
#line 161 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorFixedWidthTypeRule::computeType(nodeManager, n, check);
    break;

#line 162 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_ROTATE_LEFT:
#line 162 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorFixedWidthTypeRule::computeType(nodeManager, n, check);
    break;

#line 163 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_ROTATE_RIGHT:
#line 163 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorFixedWidthTypeRule::computeType(nodeManager, n, check);
    break;

#line 165 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_ULT:
#line 165 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorPredicateTypeRule::computeType(nodeManager, n, check);
    break;

#line 166 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_ULE:
#line 166 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorPredicateTypeRule::computeType(nodeManager, n, check);
    break;

#line 167 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_UGT:
#line 167 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorPredicateTypeRule::computeType(nodeManager, n, check);
    break;

#line 168 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_UGE:
#line 168 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorPredicateTypeRule::computeType(nodeManager, n, check);
    break;

#line 169 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_SLT:
#line 169 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorPredicateTypeRule::computeType(nodeManager, n, check);
    break;

#line 170 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_SLE:
#line 170 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorPredicateTypeRule::computeType(nodeManager, n, check);
    break;

#line 171 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_SGT:
#line 171 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorPredicateTypeRule::computeType(nodeManager, n, check);
    break;

#line 172 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_SGE:
#line 172 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorPredicateTypeRule::computeType(nodeManager, n, check);
    break;

#line 174 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_EAGER_ATOM:
#line 174 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorEagerAtomTypeRule::computeType(nodeManager, n, check);
    break;

#line 175 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_ACKERMANIZE_UDIV:
#line 175 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorAckermanizationUdivTypeRule::computeType(nodeManager, n, check);
    break;

#line 176 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_ACKERMANIZE_UREM:
#line 176 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorAckermanizationUremTypeRule::computeType(nodeManager, n, check);
    break;

#line 178 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_EXTRACT_OP:
#line 178 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorExtractOpTypeRule::computeType(nodeManager, n, check);
    break;

#line 179 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_EXTRACT:
#line 179 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorExtractTypeRule::computeType(nodeManager, n, check);
    break;

#line 180 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_BITOF:
#line 180 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorBitOfTypeRule::computeType(nodeManager, n, check);
    break;

#line 181 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_CONCAT:
#line 181 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorConcatTypeRule::computeType(nodeManager, n, check);
    break;

#line 182 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_REPEAT:
#line 182 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorRepeatTypeRule::computeType(nodeManager, n, check);
    break;

#line 183 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_ZERO_EXTEND:
#line 183 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorExtendTypeRule::computeType(nodeManager, n, check);
    break;

#line 184 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_SIGN_EXTEND:
#line 184 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorExtendTypeRule::computeType(nodeManager, n, check);
    break;

#line 186 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::BITVECTOR_TO_NAT:
#line 186 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorConversionTypeRule::computeType(nodeManager, n, check);
    break;

#line 187 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
  case kind::INT_TO_BITVECTOR:
#line 187 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/bv/kinds"
    typeNode = ::CVC4::theory::bv::BitVectorConversionTypeRule::computeType(nodeManager, n, check);
    break;

#line 51 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arrays/kinds"
  case kind::SELECT:
#line 51 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arrays/kinds"
    typeNode = ::CVC4::theory::arrays::ArraySelectTypeRule::computeType(nodeManager, n, check);
    break;

#line 52 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arrays/kinds"
  case kind::STORE:
#line 52 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arrays/kinds"
    typeNode = ::CVC4::theory::arrays::ArrayStoreTypeRule::computeType(nodeManager, n, check);
    break;

#line 53 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arrays/kinds"
  case kind::STORE_ALL:
#line 53 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arrays/kinds"
    typeNode = ::CVC4::theory::arrays::ArrayStoreTypeRule::computeType(nodeManager, n, check);
    break;

#line 54 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arrays/kinds"
  case kind::ARR_TABLE_FUN:
#line 54 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arrays/kinds"
    typeNode = ::CVC4::theory::arrays::ArrayTableFunTypeRule::computeType(nodeManager, n, check);
    break;

#line 55 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arrays/kinds"
  case kind::ARRAY_LAMBDA:
#line 55 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arrays/kinds"
    typeNode = ::CVC4::theory::arrays::ArrayLambdaTypeRule::computeType(nodeManager, n, check);
    break;

#line 83 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/datatypes/kinds"
  case kind::APPLY_CONSTRUCTOR:
#line 83 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/datatypes/kinds"
    typeNode = ::CVC4::theory::datatypes::DatatypeConstructorTypeRule::computeType(nodeManager, n, check);
    break;

#line 84 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/datatypes/kinds"
  case kind::APPLY_SELECTOR:
#line 84 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/datatypes/kinds"
    typeNode = ::CVC4::theory::datatypes::DatatypeSelectorTypeRule::computeType(nodeManager, n, check);
    break;

#line 85 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/datatypes/kinds"
  case kind::APPLY_SELECTOR_TOTAL:
#line 85 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/datatypes/kinds"
    typeNode = ::CVC4::theory::datatypes::DatatypeSelectorTypeRule::computeType(nodeManager, n, check);
    break;

#line 86 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/datatypes/kinds"
  case kind::APPLY_TESTER:
#line 86 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/datatypes/kinds"
    typeNode = ::CVC4::theory::datatypes::DatatypeTesterTypeRule::computeType(nodeManager, n, check);
    break;

#line 87 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/datatypes/kinds"
  case kind::APPLY_TYPE_ASCRIPTION:
#line 87 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/datatypes/kinds"
    typeNode = ::CVC4::theory::datatypes::DatatypeAscriptionTypeRule::computeType(nodeManager, n, check);
    break;

#line 105 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/datatypes/kinds"
  case kind::TUPLE:
#line 105 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/datatypes/kinds"
    typeNode = ::CVC4::theory::datatypes::TupleTypeRule::computeType(nodeManager, n, check);
    break;

#line 114 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/datatypes/kinds"
  case kind::TUPLE_SELECT:
#line 114 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/datatypes/kinds"
    typeNode = ::CVC4::theory::datatypes::TupleSelectTypeRule::computeType(nodeManager, n, check);
    break;

#line 122 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/datatypes/kinds"
  case kind::TUPLE_UPDATE:
#line 122 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/datatypes/kinds"
    typeNode = ::CVC4::theory::datatypes::TupleUpdateTypeRule::computeType(nodeManager, n, check);
    break;

#line 141 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/datatypes/kinds"
  case kind::RECORD:
#line 141 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/datatypes/kinds"
    typeNode = ::CVC4::theory::datatypes::RecordTypeRule::computeType(nodeManager, n, check);
    break;

#line 150 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/datatypes/kinds"
  case kind::RECORD_SELECT:
#line 150 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/datatypes/kinds"
    typeNode = ::CVC4::theory::datatypes::RecordSelectTypeRule::computeType(nodeManager, n, check);
    break;

#line 158 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/datatypes/kinds"
  case kind::RECORD_UPDATE:
#line 158 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/datatypes/kinds"
    typeNode = ::CVC4::theory::datatypes::RecordUpdateTypeRule::computeType(nodeManager, n, check);
    break;

#line 46 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/sets/kinds"
  case kind::UNION:
#line 46 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/sets/kinds"
    typeNode = ::CVC4::theory::sets::SetsBinaryOperatorTypeRule::computeType(nodeManager, n, check);
    break;

#line 47 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/sets/kinds"
  case kind::INTERSECTION:
#line 47 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/sets/kinds"
    typeNode = ::CVC4::theory::sets::SetsBinaryOperatorTypeRule::computeType(nodeManager, n, check);
    break;

#line 48 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/sets/kinds"
  case kind::SETMINUS:
#line 48 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/sets/kinds"
    typeNode = ::CVC4::theory::sets::SetsBinaryOperatorTypeRule::computeType(nodeManager, n, check);
    break;

#line 49 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/sets/kinds"
  case kind::SUBSET:
#line 49 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/sets/kinds"
    typeNode = ::CVC4::theory::sets::SubsetTypeRule::computeType(nodeManager, n, check);
    break;

#line 50 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/sets/kinds"
  case kind::MEMBER:
#line 50 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/sets/kinds"
    typeNode = ::CVC4::theory::sets::MemberTypeRule::computeType(nodeManager, n, check);
    break;

#line 51 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/sets/kinds"
  case kind::SINGLETON:
#line 51 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/sets/kinds"
    typeNode = ::CVC4::theory::sets::SingletonTypeRule::computeType(nodeManager, n, check);
    break;

#line 52 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/sets/kinds"
  case kind::EMPTYSET:
#line 52 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/sets/kinds"
    typeNode = ::CVC4::theory::sets::EmptySetTypeRule::computeType(nodeManager, n, check);
    break;

#line 53 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/sets/kinds"
  case kind::INSERT:
#line 53 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/sets/kinds"
    typeNode = ::CVC4::theory::sets::InsertTypeRule::computeType(nodeManager, n, check);
    break;

#line 74 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
  case kind::CONST_STRING:
#line 74 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
    typeNode = ::CVC4::theory::strings::StringConstantTypeRule::computeType(nodeManager, n, check);
    break;

#line 75 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
  case kind::CONST_REGEXP:
#line 75 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
    typeNode = ::CVC4::theory::strings::RegExpConstantTypeRule::computeType(nodeManager, n, check);
    break;

#line 91 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
  case kind::REGEXP_CONCAT:
#line 91 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
    typeNode = ::CVC4::theory::strings::RegExpConcatTypeRule::computeType(nodeManager, n, check);
    break;

#line 92 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
  case kind::REGEXP_UNION:
#line 92 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
    typeNode = ::CVC4::theory::strings::RegExpUnionTypeRule::computeType(nodeManager, n, check);
    break;

#line 93 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
  case kind::REGEXP_INTER:
#line 93 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
    typeNode = ::CVC4::theory::strings::RegExpInterTypeRule::computeType(nodeManager, n, check);
    break;

#line 94 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
  case kind::REGEXP_STAR:
#line 94 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
    typeNode = ::CVC4::theory::strings::RegExpStarTypeRule::computeType(nodeManager, n, check);
    break;

#line 95 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
  case kind::REGEXP_PLUS:
#line 95 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
    typeNode = ::CVC4::theory::strings::RegExpPlusTypeRule::computeType(nodeManager, n, check);
    break;

#line 96 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
  case kind::REGEXP_OPT:
#line 96 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
    typeNode = ::CVC4::theory::strings::RegExpOptTypeRule::computeType(nodeManager, n, check);
    break;

#line 97 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
  case kind::REGEXP_RANGE:
#line 97 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
    typeNode = ::CVC4::theory::strings::RegExpRangeTypeRule::computeType(nodeManager, n, check);
    break;

#line 98 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
  case kind::REGEXP_LOOP:
#line 98 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
    typeNode = ::CVC4::theory::strings::RegExpLoopTypeRule::computeType(nodeManager, n, check);
    break;

#line 100 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
  case kind::STRING_TO_REGEXP:
#line 100 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
    typeNode = ::CVC4::theory::strings::StringToRegExpTypeRule::computeType(nodeManager, n, check);
    break;

#line 102 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
  case kind::STRING_CONCAT:
#line 102 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
    typeNode = ::CVC4::theory::strings::StringConcatTypeRule::computeType(nodeManager, n, check);
    break;

#line 103 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
  case kind::STRING_LENGTH:
#line 103 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
    typeNode = ::CVC4::theory::strings::StringLengthTypeRule::computeType(nodeManager, n, check);
    break;

#line 104 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
  case kind::STRING_SUBSTR:
#line 104 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
    typeNode = ::CVC4::theory::strings::StringSubstrTypeRule::computeType(nodeManager, n, check);
    break;

#line 105 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
  case kind::STRING_SUBSTR_TOTAL:
#line 105 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
    typeNode = ::CVC4::theory::strings::StringSubstrTypeRule::computeType(nodeManager, n, check);
    break;

#line 106 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
  case kind::STRING_CHARAT:
#line 106 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
    typeNode = ::CVC4::theory::strings::StringCharAtTypeRule::computeType(nodeManager, n, check);
    break;

#line 107 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
  case kind::STRING_STRCTN:
#line 107 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
    typeNode = ::CVC4::theory::strings::StringContainTypeRule::computeType(nodeManager, n, check);
    break;

#line 108 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
  case kind::STRING_STRIDOF:
#line 108 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
    typeNode = ::CVC4::theory::strings::StringIndexOfTypeRule::computeType(nodeManager, n, check);
    break;

#line 109 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
  case kind::STRING_STRREPL:
#line 109 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
    typeNode = ::CVC4::theory::strings::StringReplaceTypeRule::computeType(nodeManager, n, check);
    break;

#line 110 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
  case kind::STRING_PREFIX:
#line 110 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
    typeNode = ::CVC4::theory::strings::StringPrefixOfTypeRule::computeType(nodeManager, n, check);
    break;

#line 111 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
  case kind::STRING_SUFFIX:
#line 111 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
    typeNode = ::CVC4::theory::strings::StringSuffixOfTypeRule::computeType(nodeManager, n, check);
    break;

#line 112 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
  case kind::STRING_ITOS:
#line 112 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
    typeNode = ::CVC4::theory::strings::StringIntToStrTypeRule::computeType(nodeManager, n, check);
    break;

#line 113 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
  case kind::STRING_STOI:
#line 113 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
    typeNode = ::CVC4::theory::strings::StringStrToIntTypeRule::computeType(nodeManager, n, check);
    break;

#line 114 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
  case kind::STRING_U16TOS:
#line 114 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
    typeNode = ::CVC4::theory::strings::StringIntToStrTypeRule::computeType(nodeManager, n, check);
    break;

#line 115 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
  case kind::STRING_STOU16:
#line 115 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
    typeNode = ::CVC4::theory::strings::StringStrToIntTypeRule::computeType(nodeManager, n, check);
    break;

#line 116 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
  case kind::STRING_U32TOS:
#line 116 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
    typeNode = ::CVC4::theory::strings::StringIntToStrTypeRule::computeType(nodeManager, n, check);
    break;

#line 117 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
  case kind::STRING_STOU32:
#line 117 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
    typeNode = ::CVC4::theory::strings::StringStrToIntTypeRule::computeType(nodeManager, n, check);
    break;

#line 119 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
  case kind::STRING_IN_REGEXP:
#line 119 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
    typeNode = ::CVC4::theory::strings::StringInRegExpTypeRule::computeType(nodeManager, n, check);
    break;

#line 121 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
  case kind::REGEXP_EMPTY:
#line 121 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
    typeNode = ::CVC4::theory::strings::EmptyRegExpTypeRule::computeType(nodeManager, n, check);
    break;

#line 122 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
  case kind::REGEXP_SIGMA:
#line 122 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/strings/kinds"
    typeNode = ::CVC4::theory::strings::SigmaRegExpTypeRule::computeType(nodeManager, n, check);
    break;

#line 45 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/quantifiers/kinds"
  case kind::FORALL:
#line 45 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/quantifiers/kinds"
    typeNode = ::CVC4::theory::quantifiers::QuantifierForallTypeRule::computeType(nodeManager, n, check);
    break;

#line 46 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/quantifiers/kinds"
  case kind::EXISTS:
#line 46 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/quantifiers/kinds"
    typeNode = ::CVC4::theory::quantifiers::QuantifierExistsTypeRule::computeType(nodeManager, n, check);
    break;

#line 47 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/quantifiers/kinds"
  case kind::BOUND_VAR_LIST:
#line 47 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/quantifiers/kinds"
    typeNode = ::CVC4::theory::quantifiers::QuantifierBoundVarListTypeRule::computeType(nodeManager, n, check);
    break;

#line 48 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/quantifiers/kinds"
  case kind::INST_PATTERN:
#line 48 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/quantifiers/kinds"
    typeNode = ::CVC4::theory::quantifiers::QuantifierInstPatternTypeRule::computeType(nodeManager, n, check);
    break;

#line 49 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/quantifiers/kinds"
  case kind::INST_PATTERN_LIST:
#line 49 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/quantifiers/kinds"
    typeNode = ::CVC4::theory::quantifiers::QuantifierInstPatternListTypeRule::computeType(nodeManager, n, check);
    break;

#line 67 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/quantifiers/kinds"
  case kind::REWRITE_RULE:
#line 67 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/quantifiers/kinds"
    typeNode = ::CVC4::theory::quantifiers::RewriteRuleTypeRule::computeType(nodeManager, n, check);
    break;

#line 68 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/quantifiers/kinds"
  case kind::RR_REWRITE:
#line 68 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/quantifiers/kinds"
    typeNode = ::CVC4::theory::quantifiers::RRRewriteTypeRule::computeType(nodeManager, n, check);
    break;

#line 69 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/quantifiers/kinds"
  case kind::RR_REDUCTION:
#line 69 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/quantifiers/kinds"
    typeNode = ::CVC4::theory::quantifiers::RRRedDedTypeRule::computeType(nodeManager, n, check);
    break;

#line 70 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/quantifiers/kinds"
  case kind::RR_DEDUCTION:
#line 70 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/quantifiers/kinds"
    typeNode = ::CVC4::theory::quantifiers::RRRedDedTypeRule::computeType(nodeManager, n, check);
    break;


#line 47 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/expr/type_checker_template.cpp"

  default:
    Debug("getType") << "FAILURE" << std::endl;
    Unhandled(n.getKind());
  }

  nodeManager->setAttribute(n, TypeAttr(), typeNode);
  nodeManager->setAttribute(n, TypeCheckedAttr(),
                            check || nodeManager->getAttribute(n, TypeCheckedAttr()));

  return typeNode;

}/* TypeChecker::computeType */

bool TypeChecker::computeIsConst(NodeManager* nodeManager, TNode n)
  throw (AssertionException) {

  Assert(n.getMetaKind() == kind::metakind::OPERATOR || n.getMetaKind() == kind::metakind::PARAMETERIZED);

  switch(n.getKind()) {

#line 58 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arrays/kinds"
  case kind::STORE:
#line 58 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arrays/kinds"
    return ::CVC4::theory::arrays::ArrayStoreTypeRule::computeIsConst(nodeManager, n);

#line 90 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/datatypes/kinds"
  case kind::APPLY_CONSTRUCTOR:
#line 90 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/datatypes/kinds"
    return ::CVC4::theory::datatypes::DatatypeConstructorTypeRule::computeIsConst(nodeManager, n);

#line 106 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/datatypes/kinds"
  case kind::TUPLE:
#line 106 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/datatypes/kinds"
    return ::CVC4::theory::datatypes::TupleProperties::computeIsConst(nodeManager, n);

#line 142 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/datatypes/kinds"
  case kind::RECORD:
#line 142 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/datatypes/kinds"
    return ::CVC4::theory::datatypes::RecordProperties::computeIsConst(nodeManager, n);

#line 55 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/sets/kinds"
  case kind::UNION:
#line 55 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/sets/kinds"
    return ::CVC4::theory::sets::SetsBinaryOperatorTypeRule::computeIsConst(nodeManager, n);

#line 56 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/sets/kinds"
  case kind::INTERSECTION:
#line 56 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/sets/kinds"
    return ::CVC4::theory::sets::SetsBinaryOperatorTypeRule::computeIsConst(nodeManager, n);

#line 57 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/sets/kinds"
  case kind::SETMINUS:
#line 57 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/sets/kinds"
    return ::CVC4::theory::sets::SetsBinaryOperatorTypeRule::computeIsConst(nodeManager, n);

#line 58 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/sets/kinds"
  case kind::SINGLETON:
#line 58 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/sets/kinds"
    return ::CVC4::theory::sets::SingletonTypeRule::computeIsConst(nodeManager, n);

#line 59 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/sets/kinds"
  case kind::INSERT:
#line 59 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/sets/kinds"
    return ::CVC4::theory::sets::InsertTypeRule::computeIsConst(nodeManager, n);


#line 70 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/expr/type_checker_template.cpp"

  default:;
  }

  return false;

}/* TypeChecker::computeIsConst */

bool TypeChecker::neverIsConst(NodeManager* nodeManager, TNode n)
  throw (AssertionException) {

  Assert(n.getMetaKind() == kind::metakind::OPERATOR || n.getMetaKind() == kind::metakind::PARAMETERIZED);

  switch(n.getKind()) {

#line 58 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arrays/kinds"
  case kind::STORE:
#line 58 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/arrays/kinds"
    return false;

#line 90 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/datatypes/kinds"
  case kind::APPLY_CONSTRUCTOR:
#line 90 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/datatypes/kinds"
    return false;

#line 106 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/datatypes/kinds"
  case kind::TUPLE:
#line 106 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/datatypes/kinds"
    return false;

#line 142 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/datatypes/kinds"
  case kind::RECORD:
#line 142 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/datatypes/kinds"
    return false;

#line 55 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/sets/kinds"
  case kind::UNION:
#line 55 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/sets/kinds"
    return false;

#line 56 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/sets/kinds"
  case kind::INTERSECTION:
#line 56 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/sets/kinds"
    return false;

#line 57 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/sets/kinds"
  case kind::SETMINUS:
#line 57 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/sets/kinds"
    return false;

#line 58 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/sets/kinds"
  case kind::SINGLETON:
#line 58 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/sets/kinds"
    return false;

#line 59 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/sets/kinds"
  case kind::INSERT:
#line 59 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/theory/sets/kinds"
    return false;


#line 87 "/home/lkloh/cvc4-1.4/builds/x86_64-unknown-linux-gnu/production/../../../src/expr/type_checker_template.cpp"

  default:;
  }

  return true;

}/* TypeChecker::neverIsConst */

}/* CVC4::expr namespace */
}/* CVC4 namespace */
